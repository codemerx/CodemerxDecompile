//    Copyright CodeMerx 2020
//    This file is part of CodemerxDecompile.

//    CodemerxDecompile is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.

//    CodemerxDecompile is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//    GNU Affero General Public License for more details.

//    You should have received a copy of the GNU Affero General Public License
//    along with CodemerxDecompile.  If not, see<https://www.gnu.org/licenses/>.

syntax = "proto3";

import "common.proto";

option csharp_namespace = "CodemerxDecompile.Service";

service RpcDecompiler {
  rpc RestoreDecompilationContext (Empty) returns (Empty);
  rpc ShouldDecompileFile (ShouldDecompileFileRequest) returns (ShouldDecompileFileResponse);
  rpc GetContextAssembly (GetContextAssemblyRequest) returns (GetContextAssemblyResponse);
  rpc GetWorkspaceDirectory (Empty) returns (GetWorkspaceDirectoryResponse);
  rpc GetAssemblyRelatedFilePaths (GetAssemblyRelatedFilePathsRequest) returns (GetAssemblyRelatedFilePathsResponse);
  rpc GetProjectCreationMetadata (GetProjectCreationMetadataRequest) returns (GetProjectCreationMetadataResponse);
  rpc GetAllTypeFilePaths (GetAllTypeFilePathsRequest) returns (GetAllTypeFilePathsResponse);
  rpc DecompileType (DecompileTypeRequest) returns (DecompileTypeResponse);
  rpc GetMemberReferenceMetadata (GetMemberReferenceMetadataRequest) returns (GetMemberReferenceMetadataResponse);
  rpc GetMemberDefinitionPosition (GetMemberDefinitionPositionRequest) returns (Selection);
  rpc AddResolvedAssembly (AddResolvedAssemblyRequest) returns (Empty);
  rpc Search (SearchRequest) returns (stream SearchResultResponse);
  rpc CancelSearch (Empty) returns (Empty);
  rpc GetSearchResultPosition (GetSearchResultPositionRequest) returns (Selection);
  rpc CreateProject (CreateProjectRequest) returns (CreateProjectResponse);
  rpc ClearAssemblyList (Empty) returns (Empty);
}

message ShouldDecompileFileRequest {
  string filePath = 1;
}

message ShouldDecompileFileResponse {
  bool shouldDecompileFile = 1;
}

message GetContextAssemblyRequest {
  string contextUri = 1;
}

message GetContextAssemblyResponse {
  string assemblyFullName = 1;
  string assemblyFilePath = 2;
	string targetPlatform = 3;
	string targetArchitecture = 4;
}

message GetProjectCreationMetadataRequest {
  string assemblyFilePath = 1;
  string projectVisualStudioVersion = 2;
}

message GetProjectCreationMetadataResponse {
  bool containsDangerousResources = 2;
  ProjectFileMetadata projectFileMetadata = 3;
}

message ProjectFileMetadata {
  bool isDecompilerSupportedProjectType = 1;
  bool isVSSupportedProjectType = 2;
  string projectTypeNotSupportedErrorMessage = 3;
  string projectFileName = 4;
  string projectFileExtension = 5;
}

message CreateProjectRequest {
  string assemblyFilePath = 1;
  string outputPath = 2;
  bool decompileDangerousResources = 3;
  string projectVisualStudioVersion = 4;
}

message CreateProjectResponse {
  string errorMessage = 1;
}

message GetWorkspaceDirectoryResponse {
  string directoryPath = 1;
}

message GetAssemblyRelatedFilePathsRequest {
  string assemblyPath = 1;
}

message GetAssemblyRelatedFilePathsResponse {
  string decompiledAssemblyDirectory = 1;
  string decompiledAssemblyPath = 2;
}

message GetAllTypeFilePathsRequest {
  string assemblyPath = 1;
}

message GetAllTypeFilePathsResponse {
  repeated string typeFilePaths = 1;
}

message GetMemberReferenceMetadataRequest {
	string absoluteFilePath = 1;
	int32 lineNumber = 2;
	int32 column = 3;
}

message GetMemberReferenceMetadataResponse {
  string definitionFilePath = 1;
  string declaringTypeName = 2;
  string memberName = 3;
  bool isCrossAssemblyReference = 4;
  string referencedAssemblyFullName = 5;
  string referencedAssemblyFilePath = 6;
}

message GetMemberDefinitionPositionRequest {
  string absoluteFilePath = 1;
  string declaringTypeName = 2;
  string memberName = 3;
}

message Selection {
	int32 startLineNumber = 1;
	int32 startColumn = 2;
	int32 endLineNumber = 3;
	int32 endColumn = 4;
}

message TypeFilePath {
  string typeFullName = 1;
  string absoluteFilePath = 2;
}

message DecompileTypeRequest {
  string filePath = 1;
}

message DecompileTypeResponse {
  string sourceCode = 1;
}

message AddResolvedAssemblyRequest {
  string filePath = 1;
}

message SearchRequest {
  string query = 1;
  bool matchCasing = 2;
  bool matchWholeWord = 3;
}

message SearchResultResponse {
  int32 id = 1;
  string filePath = 2;
  string preview = 3;
  PreviewHighlightRange highlightRange = 4;
}

message PreviewHighlightRange {
  int32 startIndex = 1;
  int32 endIndex = 2;
}

message GetSearchResultPositionRequest {
  int32 searchResultId = 1;
}
